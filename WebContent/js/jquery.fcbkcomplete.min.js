  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>FCBKcomplete/jquery.fcbkcomplete.min.js at master · CatoTH/FCBKcomplete · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="RkcF+9WgmFR00b10stCC1RJPbqPcnvX+MDntup2xulU=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-63cb089355e5b826c483075a050c52586f156b7b.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-4a2696ec075bd8d27843df00793c7e9d6525dded.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-92d138f450f2960501e28397a2f63b0f100590f0.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-beebf53f8a420319028b0a31e1846c68db823f04.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="39a5b41a75a00a7915b28e507852bc0e">

        <link data-pjax-transient rel='permalink' href='/CatoTH/FCBKcomplete/blob/d8324bda68ecb75661821ef9644909bb3814acbe/jquery.fcbkcomplete.min.js'>
    <meta property="og:title" content="FCBKcomplete"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/CatoTH/FCBKcomplete"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/c3f874655a5c0557699bc43780b72579?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="FCBKcomplete - Jquery facebook like(fancy) multi-select"/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="CatoTH/FCBKcomplete"/>

    <meta name="description" content="FCBKcomplete - Jquery facebook like(fancy) multi-select" />

      <meta name="robots" content="noindex, nofollow">

    <meta content="533440" name="octolytics-dimension-user_id" /><meta content="2034884" name="octolytics-dimension-repository_id" />
  <link href="https://github.com/CatoTH/FCBKcomplete/commits/master.atom" rel="alternate" title="Recent Commits to FCBKcomplete:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob windows vis-public fork env-production  ">
    <div id="wrapper">

      

      
      
      

      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">Github</a>

    <div class="header-actions">
      <a class="button primary" href="https://github.com/signup">Sign up</a>
      <a class="button" href="https://github.com/login?return_to=%2FCatoTH%2FFCBKcomplete%2Fblob%2Fmaster%2Fjquery.fcbkcomplete.min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">


      <ul class="top-nav">
          <li class="explore"><a href="https://github.com/explore">Explore</a></li>
        <li class="features"><a href="https://github.com/features">Features</a></li>
          <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="octicon octicon-gear "></span></a>

  <input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
      data-repo="CatoTH/FCBKcomplete"
      data-branch="master"
      data-sha="2ad955004515bb3a8c08bb2903b5d31559bb3133"
  >

    <input type="hidden" name="nwo" value="CatoTH/FCBKcomplete" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

  <div class="divider-vertical"></div>

</form>
    </div>

  </div>
</div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              

<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2FCatoTH%2FFCBKcomplete"
        class="minibutton js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="octicon octicon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/CatoTH/FCBKcomplete/stargazers">
        2
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2FCatoTH%2FFCBKcomplete"
        class="minibutton js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/CatoTH/FCBKcomplete/network" class="social-count">
        101
      </a>
    </li>
</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-octicon octicon-repo"></span>
                <span class="author vcard">
                  <a href="/CatoTH" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">CatoTH</span>
                  </a></span> /
                <strong><a href="/CatoTH/FCBKcomplete" class="js-current-repository">FCBKcomplete</a></strong>
                  <span class="fork-flag">
                    <span class="text">forked from <a href="/emposha/FCBKcomplete">emposha/FCBKcomplete</a></span>
                  </span>
              </h1>
            </div>

            
  <ul class="tabs">
    <li class="pulse-nav"><a href="/CatoTH/FCBKcomplete/pulse" class="js-selected-navigation-item " data-selected-links="pulse /CatoTH/FCBKcomplete/pulse" rel="nofollow"><span class="octicon octicon-pulse"></span></a></li>
    <li><a href="/CatoTH/FCBKcomplete" class="js-selected-navigation-item selected" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /CatoTH/FCBKcomplete">Code</a></li>
    <li><a href="/CatoTH/FCBKcomplete/network" class="js-selected-navigation-item " data-selected-links="repo_network /CatoTH/FCBKcomplete/network">Network</a></li>
    <li><a href="/CatoTH/FCBKcomplete/pulls" class="js-selected-navigation-item " data-selected-links="repo_pulls /CatoTH/FCBKcomplete/pulls">Pull Requests <span class='counter'>0</span></a></li>




    <li><a href="/CatoTH/FCBKcomplete/graphs" class="js-selected-navigation-item " data-selected-links="repo_graphs repo_contributors /CatoTH/FCBKcomplete/graphs">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/CatoTH/FCBKcomplete/tags" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_tags /CatoTH/FCBKcomplete/tags">Tags <span class="counter blank">0</span></a></li>
    </ul>
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="octicon octicon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item selected">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/CatoTH/FCBKcomplete/blob/master/jquery.fcbkcomplete.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/CatoTH/FCBKcomplete" class="selected js-selected-navigation-item tabnav-tab" data-selected-links="repo_source /CatoTH/FCBKcomplete">Files</a></li>
    <li><a href="/CatoTH/FCBKcomplete/commits/master" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_commits /CatoTH/FCBKcomplete/commits/master">Commits</a></li>
    <li><a href="/CatoTH/FCBKcomplete/branches" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_branches /CatoTH/FCBKcomplete/branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:a9284ec4414f0ab963230425c8c3d75d -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:a9284ec4414f0ab963230425c8c3d75d -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/CatoTH/FCBKcomplete" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">FCBKcomplete</span></a></span></span><span class="separator"> / </span><strong class="final-path">jquery.fcbkcomplete.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="jquery.fcbkcomplete.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
        </div>

      <a href="/CatoTH/FCBKcomplete/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/CatoTH/FCBKcomplete/contributors/master/jquery.fcbkcomplete.min.js">
          Fetching contributors…

          <div class="participation">
            <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif?1340659511" width="16" /></p>
            <p class="loader-error">Cannot retrieve contributors at this time</p>
          </div>
        </div>

    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/CatoTH/FCBKcomplete/blob/d8324bda68ecb75661821ef9644909bb3814acbe/jquery.fcbkcomplete.min.js" data-title="FCBKcomplete/jquery.fcbkcomplete.min.js at master · CatoTH/FCBKcomplete · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="octicon octicon-file-text"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>19 lines (18 sloc)</span>
                <span>8.959 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/CatoTH/FCBKcomplete/raw/master/jquery.fcbkcomplete.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/CatoTH/FCBKcomplete/blame/master/jquery.fcbkcomplete.min.js" class="button minibutton ">Blame</a>
                  <a href="/CatoTH/FCBKcomplete/commits/master/jquery.fcbkcomplete.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">fcbkcomplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(){</span><span class="nx">name</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">bricket</span><span class="o">&amp;&amp;</span><span class="nx">name</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;[]&quot;</span><span class="p">)</span><span class="o">==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">name</span><span class="o">+=</span><span class="s2">&quot;[]&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">tagName</span><span class="o">+</span><span class="s1">&#39; name=&quot;&#39;</span><span class="o">+</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;&quot; id=&quot;&#39;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s1">&#39;&quot; multiple=&quot;multiple&quot; class=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">className</span><span class="o">+</span><span class="s1">&#39; hidden&quot;&gt;&#39;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;selected&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;locked&quot;</span><span class="p">));</span><span class="nx">b</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;option value=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">()</span><span class="o">+</span><span class="s1">&#39;&quot; selected=&quot;selected&quot; id=&quot;opt_&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span></div><div class='line' id='LC2'><span class="s1">&#39;&quot;class=&quot;selected&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;&lt;/option&gt;&quot;</span><span class="p">)}});</span><span class="nx">g</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;addItem&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)});</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;removeItem&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li[rel=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">l</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">g</span><span class="p">.</span><span class="nx">show</span><span class="p">()})}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">w</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">q</span><span class="p">())</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">prevent_empty_elements</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">==</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">comma_separator</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">newel</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="nx">d</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">w</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">prevent_duplicate_elements</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC3'><span class="nx">g</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;option[value=&quot;&#39;</span><span class="o">+</span><span class="nx">p</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;_annoninput&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">x</span><span class="p">(</span><span class="nx">w</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="s2">&quot;bit-box&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot; locked&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">L</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">o</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;a class=&quot;closebutton&quot; href=&quot;#&quot;&gt;&lt;/a&gt;&#39;</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;li class=&quot;&#39;</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="s1">&#39;&quot; rel=&quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot; id=&quot;pt_&#39;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&lt;/li&gt;&#39;</span><span class="p">).</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">o</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">));</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;_annoninput&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">x</span><span class="p">(</span><span class="nx">w</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;option value=&quot;&#39;</span><span class="o">+</span><span class="nx">p</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot; id=&quot;opt_&#39;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s1">&#39;&quot; class=&quot;selected&quot; selected=&quot;selected&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;/option&gt;&quot;</span><span class="p">),</span></div><div class='line' id='LC4'><span class="nx">g</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">onselect</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">onselect</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">onchange</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">onchange</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">change</span><span class="p">());</span><span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li.bit-box.deleted&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;deleted&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;locked&quot;</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fadeOut</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">onremove</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;#o&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;option[value=&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;rel&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">onremove</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;#o&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s1">&#39;option[value=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;rel&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">onchange</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">onchange</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">g</span><span class="p">.</span><span class="nx">change</span><span class="p">();</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;li class=&quot;bit-input&quot; id=&quot;&#39;</span><span class="o">+</span></div><div class='line' id='LC5'><span class="nx">m</span><span class="o">+</span><span class="s1">&#39;_annoninput&quot;&gt;&#39;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;input type=&quot;text&quot; class=&quot;maininput&quot; size=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">input_min_size</span><span class="o">+</span><span class="s1">&#39;&quot; autocomplete=&quot;off&quot;&gt;&#39;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">input_tabindex</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;tabindex&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">input_tabindex</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">input_name</span><span class="o">!=</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">input_name</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">focus</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">z</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">fadeIn</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">blur</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">z</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">A</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">fadeOut</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">focus</span><span class="p">()});</span><span class="nx">k</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">().</span><span class="nx">length</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">show</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">hide</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;.default&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">())});</span><span class="nx">c</span><span class="p">.</span><span class="nx">keypress</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">enter</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span></div><div class='line' id='LC6'><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">().</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">input_min_size</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">input_min_size</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;size&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">keydown</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">))</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">))});</span><span class="nx">c</span><span class="p">.</span><span class="nx">keyup</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(),</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">backspace</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">hide</span><span class="p">(),</span><span class="o">!</span><span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li.bit-box:last&quot;</span><span class="p">).</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;locked&quot;</span><span class="p">)))</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li.bit-box.deleted&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li.bit-box:last&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;deleted&quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">y</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li.bit-box.deleted&quot;</span><span class="p">).</span><span class="nx">fadeOut</span><span class="p">(</span><span class="s2">&quot;fast&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">!=</span></div><div class='line' id='LC7'><span class="nx">j</span><span class="p">.</span><span class="nx">downarrow</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">uparrow</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">leftarrow</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">rightarrow</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">0</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">json_url</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">())</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">B</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">C</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">getJSON</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">json_url</span><span class="p">,{</span><span class="nx">tag</span><span class="o">:</span><span class="nx">p</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(),</span><span class="mi">1</span><span class="p">)</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">G</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">C</span><span class="p">())})},</span><span class="nx">b</span><span class="p">.</span><span class="nx">delay</span><span class="p">)}</span><span class="k">else</span> <span class="nx">B</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">C</span><span class="p">();</span><span class="nx">l</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;.default&quot;</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">show</span><span class="p">()}});</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="nx">l</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;.default&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">()},</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC8'><span class="nx">d</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">),</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">))});</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxshownitems</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxshownitems</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter_selected</span><span class="o">||!</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;option[value=&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">).</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;selected&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s1">&#39;&lt;li rel=&quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">key</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter_begin</span><span class="o">?</span><span class="s2">&quot;&lt;em&gt;$1&lt;/em&gt;$2&quot;</span><span class="o">:</span><span class="s2">&quot;$1&lt;em&gt;$2&lt;/em&gt;$3&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter_begin</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;(.*)&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter_case</span><span class="o">?</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)(.*)&quot;</span><span class="o">:</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)(.*)&quot;</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter_case</span><span class="o">?</span><span class="s2">&quot;g&quot;</span><span class="o">:</span><span class="s2">&quot;gi&quot;</span><span class="p">),</span><span class="nx">l</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){}</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="nx">p</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;/li&gt;&quot;</span><span class="p">);</span><span class="nx">u</span><span class="o">++</span><span class="p">;</span></div><div class='line' id='LC9'><span class="nx">c</span><span class="o">--</span><span class="p">}});</span><span class="nx">h</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstselected</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li:visible:first&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;auto-focus&quot;</span><span class="p">));</span><span class="nx">u</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="mi">24</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">overflow</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">})</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="s2">&quot;auto&quot;</span><span class="p">);</span><span class="nx">q</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">show</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">).</span><span class="nx">mouseover</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;auto-focus&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;auto-focus&quot;</span><span class="p">)});</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">).</span><span class="nx">mouseout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;auto-focus&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">).</span><span class="nx">mousemove</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mousemove&quot;</span><span class="p">)})}</span></div><div class='line' id='LC10'><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">enter</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">tab</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">comma</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">comma_separator</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">prevent_empty_elements</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">val</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">tab</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tab_leaves_input</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">val</span><span class="p">());</span><span class="k">else</span> <span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;rel&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">tab</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tab_leaves_input</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">newel</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addontab</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)},</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">newel</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addontab</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;_annoninput&quot;</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;.maininput&quot;</span><span class="p">);</span></div><div class='line' id='LC11'><span class="nx">H</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mousedown&quot;</span><span class="p">).</span><span class="nx">mousedown</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;rel&quot;</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="nx">l</span><span class="p">.</span><span class="nx">hide</span><span class="p">()});</span><span class="nx">a</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">keydown</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">backspace</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li.bit-box.deleted&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;deleted&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">))</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">downarrow</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="s2">&quot;first&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">uparrow</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="s2">&quot;last&quot;</span><span class="p">)})}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">N</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li:visible:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">scrollTop</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;first&quot;</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">scrollHeight</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li:visible&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span></div><div class='line' id='LC12'><span class="mi">10</span><span class="p">)</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;auto-focus&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;first&quot;</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">nextAll</span><span class="p">(</span><span class="s2">&quot;li:visible:first&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">prevAll</span><span class="p">(</span><span class="s2">&quot;li:visible:first&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">prevAll</span><span class="p">(</span><span class="s2">&quot;li:visible&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">nextAll</span><span class="p">(</span><span class="s2">&quot;li:visible&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(((</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;first&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">c</span><span class="p">)</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;first&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">c</span><span class="p">)</span><span class="o">&lt;=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">scrollTop</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">scrollHeight</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">))}</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;auto-focus&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;auto-focus&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span></div><div class='line' id='LC13'><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">maxitems</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li.bit-box&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxitems</span><span class="p">}</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">newel</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;li[fckb=1]&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;li rel=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot; fckb=&quot;1&quot;&quot;&gt;&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">u</span><span class="o">++</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">nodeValue</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;_&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">nodeName</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">nodeValue</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span></div><div class='line' id='LC14'><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">exclamation</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">j</span><span class="p">.</span><span class="nx">slash</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">colon</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">j</span><span class="p">.</span><span class="nx">at</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">squarebricket_left</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">j</span><span class="p">.</span><span class="nx">apostrof</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">escape</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]))}</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\{|\}|\*)/i</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/script(.*)/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;\\&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">b</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">unescape</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">json_url</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">cache</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;10&quot;</span><span class="p">,</span><span class="nx">newel</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">addontab</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">firstselected</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">filter_case</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">filter_selected</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">filter_begin</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">complete_text</span><span class="o">:</span><span class="s2">&quot;Start to type...&quot;</span><span class="p">,</span><span class="nx">maxshownitems</span><span class="o">:</span><span class="mi">30</span><span class="p">,</span></div><div class='line' id='LC15'><span class="nx">maxitems</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">onselect</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">onchange</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">onremove</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">attachto</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">350</span><span class="p">,</span><span class="nx">input_tabindex</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">input_min_size</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">input_name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">tab_leaves_input</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">comma_separator</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">prevent_empty_elements</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">prevent_duplicate_elements</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">bricket</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">J</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">),</span><span class="nx">D</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">G</span><span class="o">=</span><span class="p">{</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">);</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="p">{});</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span></div><div class='line' id='LC16'><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]}},</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">enter</span><span class="o">:</span><span class="mi">13</span><span class="p">,</span><span class="nx">tab</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">backspace</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">leftarrow</span><span class="o">:</span><span class="mi">37</span><span class="p">,</span><span class="nx">uparrow</span><span class="o">:</span><span class="mi">38</span><span class="p">,</span><span class="nx">rightarrow</span><span class="o">:</span><span class="mi">39</span><span class="p">,</span><span class="nx">downarrow</span><span class="o">:</span><span class="mi">40</span><span class="p">,</span><span class="nx">exclamation</span><span class="o">:</span><span class="mi">33</span><span class="p">,</span><span class="nx">slash</span><span class="o">:</span><span class="mi">47</span><span class="p">,</span><span class="nx">colon</span><span class="o">:</span><span class="mi">58</span><span class="p">,</span><span class="nx">at</span><span class="o">:</span><span class="mi">64</span><span class="p">,</span><span class="nx">squarebricket_left</span><span class="o">:</span><span class="mi">91</span><span class="p">,</span><span class="nx">apostrof</span><span class="o">:</span><span class="mi">96</span><span class="p">,</span><span class="nx">comma</span><span class="o">:</span><span class="mi">188</span><span class="p">},</span><span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">32</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="mi">61</span><span class="p">);</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz&quot;</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">search</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">((</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter_begin</span><span class="o">?</span><span class="s2">&quot;^&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter_case</span><span class="o">?</span><span class="s2">&quot;g&quot;</span><span class="o">:</span><span class="s2">&quot;gi&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">search</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">!=</span></div><div class='line' id='LC17'><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">key</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="p">})});</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">);</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="p">{});</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">,{})},</span><span class="nx">length</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;cache&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">}};(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;ul class=&quot;holder&quot;&gt;&lt;/ul&gt;&#39;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">attachto</span><span class="o">?</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">attachto</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">attachto</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attachto</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;facebook-auto&quot;&gt;&#39;</span><span class="p">);</span></div><div class='line' id='LC18'><span class="nx">b</span><span class="p">.</span><span class="nx">complete_text</span><span class="o">!=</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;default&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">complete_text</span><span class="o">+</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">hover</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">A</span><span class="o">=</span><span class="mi">1</span><span class="p">});</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;ul id=&quot;&#39;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s1">&#39;_feed&quot;&gt;&lt;/ul&gt;&#39;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">h</span><span class="p">));</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">width</span><span class="p">());</span><span class="nx">K</span><span class="p">()})();</span><span class="nx">x</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">})}})(</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543527" height="64" width="64">
</div>


        </div>
      </div>
      <div class="modal-backdrop"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.16572s from fe16.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/CatoTH/FCBKcomplete/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="octicon octicon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.16613' data-host='fe16'></span>
    
  </body>
</html>

